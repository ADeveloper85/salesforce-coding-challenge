<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <name>invocable_call</name>
        <label>invocable call</label>
        <locationX>644</locationX>
        <locationY>308</locationY>
        <actionName>Thermondo_InvocableAction</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Confirmation_screen</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>IDs</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>errorMessage</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <decisions>
        <name>order_fulfilled</name>
        <label>order fulfilled?</label>
        <locationX>417</locationX>
        <locationY>429</locationY>
        <defaultConnector>
            <targetReference>Confirmation_screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>no</defaultConnectorLabel>
        <rules>
            <name>yes_fulfilled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>cbOrderStatus</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fulfilled</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>invocable_call</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>orderstatus</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Status</picklistField>
        <picklistObject>Order</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <interviewLabel>TestInvocableMethod {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Thermondo_TestInvocableMethod</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>get_order</name>
        <label>get order</label>
        <locationX>233</locationX>
        <locationY>68</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Test_the_invocable_method</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>update_order_status</name>
        <label>update order status</label>
        <locationX>233</locationX>
        <locationY>426</locationY>
        <connector>
            <targetReference>order_fulfilled</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <elementReference>cbOrderStatus</elementReference>
            </value>
        </inputAssignments>
        <object>Order</object>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>Confirmation_screen</name>
        <label>Confirmation screen</label>
        <locationX>820</locationX>
        <locationY>425</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>txtConfirmation</name>
            <fieldText>&lt;p&gt;{!errorMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>cbOrderStatus</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Fulfilled</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>txtRejection</name>
            <fieldText>&lt;p&gt;No callout was made because the order status wasn&apos;t changed to fulfilled&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1</conditionLogic>
                <conditions>
                    <leftValueReference>cbOrderStatus</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Fulfilled</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Test_the_invocable_method</name>
        <label>Test the invocable method</label>
        <locationX>233</locationX>
        <locationY>242</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>update_order_status</targetReference>
        </connector>
        <fields>
            <name>lblOrder</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Order: {!get_order.OrderNumber}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Please change the order status to fulfilled to make an invocable call&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>cbOrderStatus</name>
            <choiceReferences>orderstatus</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>get_order.Status</elementReference>
            </defaultValue>
            <fieldText>Order status</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>650</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>get_order</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>8017Q000004jpWAQAY</stringValue>
        </value>
    </variables>
</Flow>
